{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = [\"value\"];\nconst _hoisted_2 = {\n  key: 0,\n  class: \"message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"h1\", null, \"Book a Room\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.bookRoom && $options.bookRoom(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.roomId = $event),\n    required: \"\"\n  }, [_cache[5] || (_cache[5] = _createElementVNode(\"option\", {\n    disabled: \"\",\n    value: \"\"\n  }, \"Select a Room\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.rooms, room => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: room.id,\n      value: room.id\n    }, _toDisplayString(room.name), 9 /* TEXT, PROPS */, _hoisted_1);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.roomId]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.startTime = $event),\n    type: \"datetime-local\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.startTime]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.endTime = $event),\n    type: \"datetime-local\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.endTime]]), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.reason = $event),\n    placeholder: \"Reason for booking\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.reason]]), _cache[6] || (_cache[6] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Book Room\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), $data.message ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, _toDisplayString($data.message), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _cache[8] || (_cache[8] = _createElementVNode(\"h2\", null, \"My Bookings\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.bookings, booking => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: booking.id\n    }, _toDisplayString(booking.room.name) + \" - \" + _toDisplayString(booking.startTime) + \" to \" + _toDisplayString(booking.endTime) + \": \" + _toDisplayString(booking.reason), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["key","class","_createElementBlock","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","bookRoom","$event","$data","roomId","required","disabled","value","_Fragment","_renderList","rooms","room","id","name","_hoisted_1","startTime","type","endTime","reason","placeholder","message","_hoisted_2","_toDisplayString","_createCommentVNode","bookings","booking"],"sources":["/home/rikitwiki/Desktop/booking-app/frontend/src/components/BookingPage.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Book a Room</h1>\n    <form @submit.prevent=\"bookRoom\">\n      <select v-model=\"roomId\" required>\n        <option disabled value=\"\">Select a Room</option>\n        <option v-for=\"room in rooms\" :key=\"room.id\" :value=\"room.id\">{{ room.name }}</option>\n      </select>\n      <input v-model=\"startTime\" type=\"datetime-local\" required />\n      <input v-model=\"endTime\" type=\"datetime-local\" required />\n      <textarea v-model=\"reason\" placeholder=\"Reason for booking\" required></textarea>\n      <button type=\"submit\">Book Room</button>\n    </form>\n    <p v-if=\"message\" class=\"message\">{{ message }}</p>\n\n    <h2>My Bookings</h2>\n    <ul>\n      <li v-for=\"booking in bookings\" :key=\"booking.id\">\n        {{ booking.room.name }} - {{ booking.startTime }} to {{ booking.endTime }}: {{ booking.reason }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      rooms: [],\n      roomId: '',\n      startTime: '',\n      endTime: '',\n      reason: '',\n      message: '',\n      bookings: [],\n    };\n  },\n  async created() {\n    await this.fetchRooms();\n    await this.fetchBookings();\n  },\n  methods: {\n    async fetchRooms() {\n      try {\n        const response = await axios.get('/api/rooms');\n        this.rooms = response.data;\n      } catch (error) {\n        console.error('Error fetching rooms:', error.message);\n      }\n    },\n    async fetchBookings() {\n      try {\n        const token = localStorage.getItem('authToken');\n        const response = await axios.get('/api/bookings', {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        this.bookings = response.data;\n      } catch (error) {\n        console.error('Error fetching bookings:', error.message);\n      }\n    },\n    async bookRoom() {\n      try {\n        const token = localStorage.getItem('authToken');\n        const response = await axios.post(\n          '/api/book',\n          { roomId: this.roomId, startTime: this.startTime, endTime: this.endTime, reason: this.reason },\n          { headers: { Authorization: `Bearer ${token}` } }\n        );\n        this.message = `Room booked successfully! Booking ID: ${response.data.booking.id}`;\n        this.fetchBookings(); // Обновляем список брони\n      } catch (error) {\n        console.error('Error booking room:', error.response?.data?.message || error.message);\n        this.message = 'Failed to book the room. Please try again.';\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.message {\n  color: green;\n  margin-top: 10px;\n}\n</style>\n"],"mappings":";mBAAA;;EAAAA,GAAA;EAasBC,KAAK,EAAC;;;uBAZ1BC,mBAAA,CAoBM,c,0BAnBJC,mBAAA,CAAoB,YAAhB,aAAW,sBACfA,mBAAA,CASO;IATAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHjBC,cAAA,KAAAC,IAAA,KAG2BC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;sBAC7BJ,mBAAA,CAGS;IAPf,uBAAAE,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAIuBC,KAAA,CAAAC,MAAM,GAAAF,MAAA;IAAEG,QAAQ,EAAR;gCACvBV,mBAAA,CAAgD;IAAxCW,QAAQ,EAAR,EAAQ;IAACC,KAAK,EAAC;KAAG,eAAa,uB,kBACvCb,mBAAA,CAAsFc,SAAA,QAN9FC,WAAA,CAM+BN,KAAA,CAAAO,KAAK,EAAbC,IAAI;yBAAnBjB,mBAAA,CAAsF;MAAvDF,GAAG,EAAEmB,IAAI,CAACC,EAAE;MAAGL,KAAK,EAAEI,IAAI,CAACC;wBAAOD,IAAI,CAACE,IAAI,wBANlFC,UAAA;2EAIuBX,KAAA,CAAAC,MAAM,E,mBAIvBT,mBAAA,CAA4D;IARlE,uBAAAE,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAQsBC,KAAA,CAAAY,SAAS,GAAAb,MAAA;IAAEc,IAAI,EAAC,gBAAgB;IAACX,QAAQ,EAAR;iDAAjCF,KAAA,CAAAY,SAAS,E,mBACzBpB,mBAAA,CAA0D;IAThE,uBAAAE,MAAA,QAAAA,MAAA,MAAAK,MAAA,IASsBC,KAAA,CAAAc,OAAO,GAAAf,MAAA;IAAEc,IAAI,EAAC,gBAAgB;IAACX,QAAQ,EAAR;iDAA/BF,KAAA,CAAAc,OAAO,E,mBACvBtB,mBAAA,CAAgF;IAVtF,uBAAAE,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAUyBC,KAAA,CAAAe,MAAM,GAAAhB,MAAA;IAAEiB,WAAW,EAAC,oBAAoB;IAACd,QAAQ,EAAR;iDAAzCF,KAAA,CAAAe,MAAM,E,6BACzBvB,mBAAA,CAAwC;IAAhCqB,IAAI,EAAC;EAAQ,GAAC,WAAS,qB,4BAExBb,KAAA,CAAAiB,OAAO,I,cAAhB1B,mBAAA,CAAmD,KAAnD2B,UAAmD,EAAAC,gBAAA,CAAdnB,KAAA,CAAAiB,OAAO,oBAbhDG,mBAAA,gB,0BAeI5B,mBAAA,CAAoB,YAAhB,aAAW,sBACfA,mBAAA,CAIK,c,kBAHHD,mBAAA,CAEKc,SAAA,QAnBXC,WAAA,CAiB4BN,KAAA,CAAAqB,QAAQ,EAAnBC,OAAO;yBAAlB/B,mBAAA,CAEK;MAF4BF,GAAG,EAAEiC,OAAO,CAACb;wBACzCa,OAAO,CAACd,IAAI,CAACE,IAAI,IAAG,KAAG,GAAAS,gBAAA,CAAGG,OAAO,CAACV,SAAS,IAAG,MAAI,GAAAO,gBAAA,CAAGG,OAAO,CAACR,OAAO,IAAG,IAAE,GAAAK,gBAAA,CAAGG,OAAO,CAACP,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}