{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  key: 1,\n  class: \"modal\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"h1\", null, \"Booked Rooms\", -1 /* HOISTED */)), $data.rooms.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \"No rooms are booked currently.\")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.rooms, room => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: room.id,\n      onClick: $event => $options.showRoomDetails(room)\n    }, _toDisplayString(room.name), 9 /* TEXT, PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))]), $data.selectedRoom ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"h2\", null, _toDisplayString($data.selectedRoom.name), 1 /* TEXT */), _createElementVNode(\"p\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"Author:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedRoom.user_email), 1 /* TEXT */)]), _createCommentVNode(\" Почта пользователя \"), _createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"Time:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedRoom.start_time) + \" to \" + _toDisplayString($data.selectedRoom.end_time), 1 /* TEXT */)]), _createCommentVNode(\" Время бронирования \"), _createElementVNode(\"p\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"Reason:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedRoom.reason), 1 /* TEXT */)]), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $data.selectedRoom = null)\n  }, \"Close\")])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","class","_createElementBlock","_createElementVNode","$data","rooms","length","_hoisted_1","_createCommentVNode","_Fragment","_renderList","room","id","onClick","$event","$options","showRoomDetails","name","_hoisted_2","selectedRoom","_hoisted_3","_toDisplayString","_createTextVNode","user_email","start_time","end_time","reason","_cache"],"sources":["/home/rikitwiki/Desktop/booking-app/frontend/src/components/AppHome.vue"],"sourcesContent":["<template>\n    <div>\n      <h1>Booked Rooms</h1>\n      <div v-if=\"rooms.length === 0\">No rooms are booked currently.</div>\n      <ul>\n        <li v-for=\"room in rooms\" :key=\"room.id\" @click=\"showRoomDetails(room)\">\n          {{ room.name }}\n        </li>\n      </ul>\n      <div v-if=\"selectedRoom\" class=\"modal\">\n        <h2>{{ selectedRoom.name }}</h2>\n        <p><strong>Author:</strong> {{ selectedRoom.user_email }}</p> <!-- Почта пользователя -->\n        <p><strong>Time:</strong> {{ selectedRoom.start_time }} to {{ selectedRoom.end_time }}</p> <!-- Время бронирования -->\n        <p><strong>Reason:</strong> {{ selectedRoom.reason }}</p>\n        <button @click=\"selectedRoom = null\">Close</button>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        rooms: [],\n        selectedRoom: null,\n      };\n    },\n    async created() {\n      try { \n        const token = localStorage.getItem('authToken');\n        const response = await axios.get('/bookings', {\n          headers: { Authorization: `Bearer ${token}` }, // Передаем токен\n        });\n        this.rooms = response.data; // Загружаем все бронирования\n      } catch (error) {\n        console.error('Error fetching booked rooms:', error);\n        this.$router.push('/login'); // Перенаправляем на логин при ошибке\n      }\n    },\n    methods: {\n      showRoomDetails(room) {\n        this.selectedRoom = room;\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .modal {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.5);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  \n  .modal div {\n    background: white;\n    padding: 20px;\n    border-radius: 8px;\n  }\n  </style>  "],"mappings":";;EAAAA,GAAA;AAAA;mBAAA;;EAAAA,GAAA;EAS+BC,KAAK,EAAC;;;uBARjCC,mBAAA,CAeM,c,0BAdJC,mBAAA,CAAqB,YAAjB,cAAY,sBACLC,KAAA,CAAAC,KAAK,CAACC,MAAM,U,cAAvBJ,mBAAA,CAAmE,OAHzEK,UAAA,EAGqC,gCAA8B,KAHnEC,mBAAA,gBAIML,mBAAA,CAIK,c,kBAHHD,mBAAA,CAEKO,SAAA,QAPbC,WAAA,CAK2BN,KAAA,CAAAC,KAAK,EAAbM,IAAI;yBAAfT,mBAAA,CAEK;MAFsBF,GAAG,EAAEW,IAAI,CAACC,EAAE;MAAGC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,eAAe,CAACL,IAAI;wBAChEA,IAAI,CAACM,IAAI,wBANtBC,UAAA;oCASiBd,KAAA,CAAAe,YAAY,I,cAAvBjB,mBAAA,CAMM,OANNkB,UAMM,GALJjB,mBAAA,CAAgC,YAAAkB,gBAAA,CAAzBjB,KAAA,CAAAe,YAAY,CAACF,IAAI,kBACxBd,mBAAA,CAA6D,Y,0BAA1DA,mBAAA,CAAwB,gBAAhB,SAAO,sBAX1BmB,gBAAA,CAWmC,GAAC,GAAAD,gBAAA,CAAGjB,KAAA,CAAAe,YAAY,CAACI,UAAU,iB,GAAQf,mBAAA,wBAA2B,EACzFL,mBAAA,CAA0F,Y,0BAAvFA,mBAAA,CAAsB,gBAAd,OAAK,sBAZxBmB,gBAAA,CAYiC,GAAC,GAAAD,gBAAA,CAAGjB,KAAA,CAAAe,YAAY,CAACK,UAAU,IAAG,MAAI,GAAAH,gBAAA,CAAGjB,KAAA,CAAAe,YAAY,CAACM,QAAQ,iB,GAAQjB,mBAAA,wBAA2B,EACtHL,mBAAA,CAAyD,Y,0BAAtDA,mBAAA,CAAwB,gBAAhB,SAAO,sBAb1BmB,gBAAA,CAamC,GAAC,GAAAD,gBAAA,CAAGjB,KAAA,CAAAe,YAAY,CAACO,MAAM,iB,GAClDvB,mBAAA,CAAmD;IAA1CU,OAAK,EAAAc,MAAA,QAAAA,MAAA,MAAAb,MAAA,IAAEV,KAAA,CAAAe,YAAY;KAAS,OAAK,E,KAdlDX,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}