{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\n// Импорт createRouter и createWebHistory из vue-router\nimport { createRouter, createWebHistory } from 'vue-router';\nimport Home from '../components/AppHome.vue';\nimport Login from '../components/UserLogin.vue';\nimport Register from '../components/UserRegister.vue'; // Импорт нового компонента\n\n// Создание экземпляра роутера с использованием функции createRouter\nconst router = createRouter({\n  history: createWebHistory(),\n  // Используйте createWebHistory для использования истории браузера\n  routes: [{\n    path: '/',\n    name: 'home',\n    component: Home,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/login',\n    name: 'login',\n    component: Login\n  }, {\n    path: '/register',\n    name: 'Register',\n    component: Register\n  }]\n});\n\n// Проверка аутентификации перед переходом\nrouter.beforeEach((to, from, next) => {\n  const isAuthenticated = localStorage.getItem('authToken'); // Проверяем токен\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!isAuthenticated) {\n      next('/login'); // Перенаправляем на страницу логина\n    } else {\n      next(); // Пользователь авторизован, разрешаем доступ\n    }\n  } else {\n    next(); // Доступ открыт\n  }\n});\n\n// Экспорт роутера для использования в main.js\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Home","Login","Register","router","history","routes","path","name","component","meta","requiresAuth","beforeEach","to","from","next","isAuthenticated","localStorage","getItem","matched","some","record"],"sources":["/home/rikitwiki/Desktop/booking-app/frontend/src/router/index.js"],"sourcesContent":["// Импорт createRouter и createWebHistory из vue-router\nimport { createRouter, createWebHistory } from 'vue-router';\nimport Home from '../components/AppHome.vue';\nimport Login from '../components/UserLogin.vue';\n\nimport Register from '../components/UserRegister.vue';  // Импорт нового компонента\n\n// Создание экземпляра роутера с использованием функции createRouter\nconst router = createRouter({\n  history: createWebHistory(), // Используйте createWebHistory для использования истории браузера\n  routes: [\n    {\n      path: '/',\n      name: 'home',\n      component: Home,\n      meta: { requiresAuth: true }\n    },\n    {\n      path: '/login',\n      name: 'login',\n      component: Login\n    },\n    { path: '/register',\n      name: 'Register',\n      component: Register }\n  ]\n});\n\n// Проверка аутентификации перед переходом\nrouter.beforeEach((to, from, next) => {\n    const isAuthenticated = localStorage.getItem('authToken'); // Проверяем токен\n    if (to.matched.some(record => record.meta.requiresAuth)) {\n      if (!isAuthenticated) {\n        next('/login'); // Перенаправляем на страницу логина\n      } else {\n        next(); // Пользователь авторизован, разрешаем доступ\n      }\n    } else {\n      next(); // Доступ открыт\n    }\n  });\n\n// Экспорт роутера для использования в main.js\nexport default router;"],"mappings":";;AAAA;AACA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,IAAI,MAAM,2BAA2B;AAC5C,OAAOC,KAAK,MAAM,6BAA6B;AAE/C,OAAOC,QAAQ,MAAM,gCAAgC,CAAC,CAAE;;AAExD;AACA,MAAMC,MAAM,GAAGL,YAAY,CAAC;EAC1BM,OAAO,EAAEL,gBAAgB,CAAC,CAAC;EAAE;EAC7BM,MAAM,EAAE,CACN;IACEC,IAAI,EAAE,GAAG;IACTC,IAAI,EAAE,MAAM;IACZC,SAAS,EAAER,IAAI;IACfS,IAAI,EAAE;MAAEC,YAAY,EAAE;IAAK;EAC7B,CAAC,EACD;IACEJ,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,OAAO;IACbC,SAAS,EAAEP;EACb,CAAC,EACD;IAAEK,IAAI,EAAE,WAAW;IACjBC,IAAI,EAAE,UAAU;IAChBC,SAAS,EAAEN;EAAS,CAAC;AAE3B,CAAC,CAAC;;AAEF;AACAC,MAAM,CAACQ,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAClC,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;EAC3D,IAAIL,EAAE,CAACM,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACX,IAAI,CAACC,YAAY,CAAC,EAAE;IACvD,IAAI,CAACK,eAAe,EAAE;MACpBD,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IAClB,CAAC,MAAM;MACLA,IAAI,CAAC,CAAC,CAAC,CAAC;IACV;EACF,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC,CAAC,CAAC;EACV;AACF,CAAC,CAAC;;AAEJ;AACA,eAAeX,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}