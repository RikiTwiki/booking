{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      rooms: [],\n      selectedRoom: null\n    };\n  },\n  async created() {\n    try {\n      const token = localStorage.getItem('authToken');\n      const response = await axios.get('/bookings', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        } // Передаем токен\n      });\n      this.rooms = response.data; // Загружаем все бронирования\n    } catch (error) {\n      console.error('Error fetching booked rooms:', error);\n      this.$router.push('/login'); // Перенаправляем на логин при ошибке\n    }\n  },\n  methods: {\n    showRoomDetails(room) {\n      this.selectedRoom = room;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","rooms","selectedRoom","created","token","localStorage","getItem","response","get","headers","Authorization","error","console","$router","push","methods","showRoomDetails","room"],"sources":["/home/rikitwiki/Desktop/booking-app/frontend/src/components/AppHome.vue"],"sourcesContent":["<template>\n    <div>\n      <h1>Booked Rooms</h1>\n      <div v-if=\"rooms.length === 0\">No rooms are booked currently.</div>\n      <ul>\n        <li v-for=\"room in rooms\" :key=\"room.id\" @click=\"showRoomDetails(room)\">\n          {{ room.name }}\n        </li>\n      </ul>\n      <div v-if=\"selectedRoom\" class=\"modal\">\n        <h2>{{ selectedRoom.name }}</h2>\n        <p><strong>Author:</strong> {{ selectedRoom.user_email }}</p> <!-- Почта пользователя -->\n        <p><strong>Time:</strong> {{ selectedRoom.start_time }} to {{ selectedRoom.end_time }}</p> <!-- Время бронирования -->\n        <p><strong>Reason:</strong> {{ selectedRoom.reason }}</p>\n        <button @click=\"selectedRoom = null\">Close</button>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        rooms: [],\n        selectedRoom: null,\n      };\n    },\n    async created() {\n      try { \n        const token = localStorage.getItem('authToken');\n        const response = await axios.get('/bookings', {\n          headers: { Authorization: `Bearer ${token}` }, // Передаем токен\n        });\n        this.rooms = response.data; // Загружаем все бронирования\n      } catch (error) {\n        console.error('Error fetching booked rooms:', error);\n        this.$router.push('/login'); // Перенаправляем на логин при ошибке\n      }\n    },\n    methods: {\n      showRoomDetails(room) {\n        this.selectedRoom = room;\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .modal {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.5);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  \n  .modal div {\n    background: white;\n    padding: 20px;\n    border-radius: 8px;\n  }\n  </style>  "],"mappings":";AAoBE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,MAAMC,QAAO,GAAI,MAAMR,KAAK,CAACS,GAAG,CAAC,WAAW,EAAE;QAC5CC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG,CAAC,CAAE;MACjD,CAAC,CAAC;MACF,IAAI,CAACH,KAAI,GAAIM,QAAQ,CAACP,IAAI,EAAE;IAC9B,EAAE,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,IAAI,CAACE,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC,EAAE;IAC/B;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,eAAeA,CAACC,IAAI,EAAE;MACpB,IAAI,CAACf,YAAW,GAAIe,IAAI;IAC1B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}