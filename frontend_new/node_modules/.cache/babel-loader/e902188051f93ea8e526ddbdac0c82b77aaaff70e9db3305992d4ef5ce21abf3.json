{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      name: '',\n      description: '',\n      message: '',\n      // Для сообщений об успехе или ошибке\n      userRole: ''\n    };\n  },\n  methods: {\n    async addRoom() {\n      try {\n        const token = localStorage.getItem('authToken');\n        const response = await axios.post('/add-rooms', {\n          name: this.name,\n          description: this.description\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Используем ответ сервера для подтверждения\n        console.log('Room added successfully:', response.data);\n        this.message = `Room \"${response.data.name}\" added successfully!`;\n        this.name = '';\n        this.description = '';\n      } catch (error) {\n        console.error('Error adding room:', error.response?.data?.message || error.message);\n        this.message = 'Failed to add room. Please try again.';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","name","description","message","userRole","methods","addRoom","token","localStorage","getItem","response","post","headers","Authorization","console","log","error"],"sources":["/home/rikitwiki/Desktop/booking-app/frontend/src/components/AddRoomPage.vue"],"sourcesContent":["<template>\n    <div>\n      <h1>Add New Room</h1>\n      <form @submit.prevent=\"addRoom\">\n        <input v-model=\"name\" type=\"text\" placeholder=\"Room Name\" required />\n        <textarea v-model=\"description\" placeholder=\"Room Description\" required></textarea>\n        <button type=\"submit\">Add Room</button>\n      </form>\n      <p v-if=\"message\" class=\"message\">{{ message }}</p>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        name: '',\n        description: '',\n        message: '', // Для сообщений об успехе или ошибке\n        userRole: '',\n      };\n    },\n    methods: {\n      async addRoom() {\n        try {\n          const token = localStorage.getItem('authToken');\n          const response = await axios.post(\n            '/add-rooms',\n            { name: this.name, description: this.description },\n            { headers: { Authorization: `Bearer ${token}` } }\n          );\n  \n          // Используем ответ сервера для подтверждения\n          console.log('Room added successfully:', response.data);\n  \n          this.message = `Room \"${response.data.name}\" added successfully!`;\n          this.name = '';\n          this.description = '';\n        } catch (error) {\n          console.error('Error adding room:', error.response?.data?.message || error.message);\n          this.message = 'Failed to add room. Please try again.';\n        }\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .message {\n    color: green;\n    margin-top: 10px;\n  }\n  </style>  "],"mappings":"AAaE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,EAAE;MACfC,OAAO,EAAE,EAAE;MAAE;MACbC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,OAAOA,CAAA,EAAG;MACd,IAAI;QACF,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAC/C,MAAMC,QAAO,GAAI,MAAMX,KAAK,CAACY,IAAI,CAC/B,YAAY,EACZ;UAAEV,IAAI,EAAE,IAAI,CAACA,IAAI;UAAEC,WAAW,EAAE,IAAI,CAACA;QAAY,CAAC,EAClD;UAAEU,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUN,KAAK;UAAG;QAAE,CAClD,CAAC;;QAED;QACAO,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEL,QAAQ,CAACV,IAAI,CAAC;QAEtD,IAAI,CAACG,OAAM,GAAI,SAASO,QAAQ,CAACV,IAAI,CAACC,IAAI,uBAAuB;QACjE,IAAI,CAACA,IAAG,GAAI,EAAE;QACd,IAAI,CAACC,WAAU,GAAI,EAAE;MACvB,EAAE,OAAOc,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACN,QAAQ,EAAEV,IAAI,EAAEG,OAAM,IAAKa,KAAK,CAACb,OAAO,CAAC;QACnF,IAAI,CAACA,OAAM,GAAI,uCAAuC;MACxD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}