{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = [\"value\"];\nconst _hoisted_2 = {\n  key: 0,\n  class: \"message\"\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = [\"disabled\"];\nconst _hoisted_5 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[9] || (_cache[9] = _createElementVNode(\"h1\", null, \"Book a Room\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.bookRoom && $options.bookRoom(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.roomId = $event),\n    required: \"\"\n  }, [_cache[7] || (_cache[7] = _createElementVNode(\"option\", {\n    disabled: \"\",\n    value: \"\"\n  }, \"Select a Room\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.rooms, room => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: room.id,\n      value: room.id\n    }, _toDisplayString(room.name), 9 /* TEXT, PROPS */, _hoisted_1);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.roomId]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.startTime = $event),\n    type: \"datetime-local\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.startTime]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.endTime = $event),\n    type: \"datetime-local\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.endTime]]), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.reason = $event),\n    placeholder: \"Reason for booking\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.reason]]), _cache[8] || (_cache[8] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Book Room\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), $data.message ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, _toDisplayString($data.message), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _cache[10] || (_cache[10] = _createElementVNode(\"h2\", null, \"My Bookings\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.bookings, booking => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: booking.id\n    }, _toDisplayString(booking.room.name) + \" - \" + _toDisplayString(booking.start_time) + \" to \" + _toDisplayString(booking.end_time) + \": \" + _toDisplayString(booking.reason), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Пагинация \"), $data.totalPages > 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = $event => $options.changePage($data.page - 1)),\n    disabled: $data.page === 1\n  }, \"Previous\", 8 /* PROPS */, _hoisted_4), _createElementVNode(\"span\", null, \"Page \" + _toDisplayString($data.page) + \" of \" + _toDisplayString($data.totalPages), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = $event => $options.changePage($data.page + 1)),\n    disabled: $data.page === $data.totalPages\n  }, \"Next\", 8 /* PROPS */, _hoisted_5)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","class","_createElementBlock","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","bookRoom","$event","$data","roomId","required","disabled","value","_Fragment","_renderList","rooms","room","id","name","_hoisted_1","startTime","type","endTime","reason","placeholder","message","_hoisted_2","_toDisplayString","_createCommentVNode","bookings","booking","start_time","end_time","totalPages","_hoisted_3","onClick","changePage","page","_hoisted_4","_hoisted_5"],"sources":["/home/rikitwiki/Desktop/booking-app/frontend/src/components/BookingPage.vue"],"sourcesContent":["<template>\n    <div>\n      <h1>Book a Room</h1>\n      <form @submit.prevent=\"bookRoom\">\n        <select v-model=\"roomId\" required>\n          <option disabled value=\"\">Select a Room</option>\n          <option v-for=\"room in rooms\" :key=\"room.id\" :value=\"room.id\">{{ room.name }}</option>\n        </select>\n        <input v-model=\"startTime\" type=\"datetime-local\" required />\n        <input v-model=\"endTime\" type=\"datetime-local\" required />\n        <textarea v-model=\"reason\" placeholder=\"Reason for booking\" required></textarea>\n        <button type=\"submit\">Book Room</button>\n      </form>\n      <p v-if=\"message\" class=\"message\">{{ message }}</p>\n  \n      <h2>My Bookings</h2>\n      <ul>\n        <li v-for=\"booking in bookings\" :key=\"booking.id\">\n          {{ booking.room.name }} - {{ booking.start_time }} to {{ booking.end_time }}: {{ booking.reason }}\n        </li>\n      </ul>\n  \n      <!-- Пагинация -->\n      <div v-if=\"totalPages > 1\">\n        <button @click=\"changePage(page - 1)\" :disabled=\"page === 1\">Previous</button>\n        <span>Page {{ page }} of {{ totalPages }}</span>\n        <button @click=\"changePage(page + 1)\" :disabled=\"page === totalPages\">Next</button>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        rooms: [],\n        roomId: '',\n        startTime: '',\n        endTime: '',\n        reason: '',\n        message: '',\n        bookings: [],\n        page: 1, // Текущая страница\n        totalPages: 1, // Количество страниц\n      };\n    },\n    async created() {\n      await this.fetchRooms();\n      await this.fetchBookings();\n    },\n    methods: {\n      async fetchRooms() {\n        try {\n          const response = await axios.get('/rooms'); // Получаем список залов\n          this.rooms = response.data;\n        } catch (error) {\n          console.error('Error fetching rooms:', error.message);\n        }\n      },\n  \n      async fetchBookings() {\n        try {\n          const token = localStorage.getItem('authToken');\n          const response = await axios.get(`/api/bookings?page=${this.page}`, {\n            headers: { Authorization: `Bearer ${token}` },\n          });\n  \n          this.bookings = response.data;\n          this.totalPages = Math.ceil(response.data.totalCount / 10); // Пагинация\n        } catch (error) {\n          console.error('Error fetching bookings:', error.message);\n        }\n      },\n  \n      async bookRoom() {\n        if (!this.roomId || !this.startTime || !this.endTime || !this.reason) {\n          this.message = 'Please fill in all fields before booking.';\n          return;\n        }\n  \n        try {\n          const token = localStorage.getItem('authToken');\n          const response = await axios.post(\n            '/api/add-booking',\n            {\n              roomId: this.roomId,\n              startTime: this.startTime,\n              endTime: this.endTime,\n              reason: this.reason,\n            },\n            {\n              headers: {\n                Authorization: `Bearer ${token}`,\n              },\n            }\n          );\n  \n          this.message = `Room booked successfully! Booking ID: ${response.data.id}`;\n          this.fetchBookings(); // Обновляем список бронирований\n        } catch (error) {\n          console.error('Error booking room:', error.response?.data?.message || error.message);\n          this.message = 'Failed to book the room. Please try again.';\n        }\n      },\n  \n      changePage(newPage) {\n        this.page = newPage;\n        this.fetchBookings(); // Загружаем данные для новой страницы\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .message {\n    color: green;\n    margin-top: 10px;\n  }\n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}